name: Publish
on:
  workflow_dispatch:
    inputs:
      release_name:
        description: The name of the release
        required: true

jobs:
  publish:
    # To enable auto publishing to github, update your electron publisher
    # config in package.json > "build" and remove the conditional below
    # if: ${{ github.repository_owner == 'electron-react-boilerplate' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Check for tag
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          echo "Error: Publish workflow can only be executed against a tag, but it was triggered by: ${{ github.ref }}"
          exit 1

      - name: Install Node and NPM
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Publish
        env:
          # These values are used for auto updates signing
          #APPLE_ID: ${{ secrets.APPLE_ID }}
          #APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          #CSC_LINK: ${{ secrets.CSC_LINK }}
          #CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always

  build_frontend:
    env:
      PLUGIN_NAME: hdr-launcher
    runs-on: ubuntu-latest
    steps:
    - name: checkout version
      uses: actions/checkout@v4.1.4

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - uses: actions/setup-node@v4.0.3
      with:
        node-version: 20

    - run: npm install

    - run: npm run build

    - run: mkdir frontend
    - run: cp -r release frontend

    # upload built web files
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend
        path: frontend
        
  build_the_plugin:
    runs-on: ubuntu-24.04
    container: 
      image: wuboyth/skyline-plugin-builder:latest
    needs: build_frontend
    steps:
    - name: checkout version
      uses: actions/checkout@v4.1.4
    - uses: actions/download-artifact@v4
      name: frontend

    - run: ls -lart
    - run: "rm -rf release && cp -r frontend/* ."
    - run: "ls -lart release/*"
    - run: |
        export PATH="$PATH:/root/.cargo/bin:/opt/devkitpro/devkitA64/bin" \
        && cd switch \
        && cargo skyline build --release --features "no-npm"\
        && cd ..
      env:
        HOME: /root
        
    - run: mv switch/target/aarch64-skyline-switch/release/lib*.nro hdr-launcher.nro

    - run: |
        md5sum hdr-launcher.nro > checksum.txt

    # upload plugin
    - name: upload plugin
      id: upload1
      continue-on-error: true
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        name: "${{ github.event.inputs.release_name }}"
        artifacts: hdr-launcher.nro,checksum.txt
        generateReleaseNotes: true
        draft: true
        allowUpdates: true
